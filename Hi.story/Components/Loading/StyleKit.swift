//
//  StyleKit.swift
//  Hi.story
//
//  Created by xspyhack@gmail.com on 19/03/2017.
//  Copyright Â© 2017 blessing software. All rights reserved.
//
//  Generated by PaintCode Plugin for Sketch
//  http://www.paintcodeapp.com/sketch
//

import UIKit

class StyleKit: NSObject {
    
    
    //MARK: - Canvas Drawings
    
    class func drawLogo(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 120, height: 120), resizing: ResizingBehavior = .aspectFit) {
        /// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        /// Resize to Target Frame
        context.saveGState()
        let resizedFrame = resizing.apply(rect: CGRect(x: 0, y: 0, width: 120, height: 120), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 120, y: resizedFrame.height / 120)
        
        /// charmander
        do {
            context.saveGState()
            context.translateBy(x: 27, y: 20)
            
            /// shaped
            let shaped = UIBezierPath()
            shaped.move(to: CGPoint(x: 13.02, y: 35.38))
            shaped.addCurve(to: CGPoint(x: 5.84, y: 39.76), controlPoint1: CGPoint(x: 11.21, y: 36.12), controlPoint2: CGPoint(x: 5.84, y: 39.76))
            shaped.addCurve(to: CGPoint(x: 2.14, y: 39.34), controlPoint1: CGPoint(x: 5.84, y: 39.76), controlPoint2: CGPoint(x: 2.66, y: 39.34))
            shaped.addCurve(to: CGPoint(x: 2.25, y: 41.25), controlPoint1: CGPoint(x: 1.63, y: 39.34), controlPoint2: CGPoint(x: 2.25, y: 41.25))
            shaped.addCurve(to: CGPoint(x: 0, y: 42.44), controlPoint1: CGPoint(x: 2.25, y: 41.25), controlPoint2: CGPoint(x: 0, y: 41.81))
            shaped.addCurve(to: CGPoint(x: 2.66, y: 44.47), controlPoint1: CGPoint(x: 0, y: 43.08), controlPoint2: CGPoint(x: 2.66, y: 44.47))
            shaped.addCurve(to: CGPoint(x: 2.83, y: 47.76), controlPoint1: CGPoint(x: 2.66, y: 44.47), controlPoint2: CGPoint(x: 1.82, y: 47.76))
            shaped.addCurve(to: CGPoint(x: 5.62, y: 46.62), controlPoint1: CGPoint(x: 4.38, y: 47.76), controlPoint2: CGPoint(x: 5.62, y: 46.62))
            shaped.addCurve(to: CGPoint(x: 14.06, y: 46.16), controlPoint1: CGPoint(x: 9.19, y: 47.07), controlPoint2: CGPoint(x: 14.06, y: 46.16))
            shaped.addCurve(to: CGPoint(x: 14.25, y: 56.53), controlPoint1: CGPoint(x: 13.06, y: 51.93), controlPoint2: CGPoint(x: 14.25, y: 56.53))
            shaped.addCurve(to: CGPoint(x: 8.36, y: 71.46), controlPoint1: CGPoint(x: 3.84, y: 61.68), controlPoint2: CGPoint(x: 8.36, y: 71.46))
            shaped.addCurve(to: CGPoint(x: 4.17, y: 76.61), controlPoint1: CGPoint(x: 4.97, y: 73.76), controlPoint2: CGPoint(x: 4.17, y: 76.61))
            shaped.addLine(to: CGPoint(x: 6.03, y: 76.61))
            shaped.addLine(to: CGPoint(x: 6.03, y: 77.66))
            shaped.addLine(to: CGPoint(x: 8.48, y: 76.77))
            shaped.addLine(to: CGPoint(x: 8.58, y: 78.22))
            shaped.addLine(to: CGPoint(x: 12.73, y: 76.88))
            shaped.addCurve(to: CGPoint(x: 20.95, y: 74.49), controlPoint1: CGPoint(x: 18.95, y: 76.88), controlPoint2: CGPoint(x: 20.57, y: 75.21))
            shaped.addCurve(to: CGPoint(x: 20.95, y: 72.22), controlPoint1: CGPoint(x: 21.33, y: 73.78), controlPoint2: CGPoint(x: 20.66, y: 72.78))
            shaped.addCurve(to: CGPoint(x: 24.68, y: 69.86), controlPoint1: CGPoint(x: 21.24, y: 71.66), controlPoint2: CGPoint(x: 24.68, y: 69.86))
            shaped.addCurve(to: CGPoint(x: 35.76, y: 70.65), controlPoint1: CGPoint(x: 24.68, y: 69.86), controlPoint2: CGPoint(x: 28.88, y: 72.72))
            shaped.addCurve(to: CGPoint(x: 40.35, y: 78.22), controlPoint1: CGPoint(x: 35.93, y: 70.65), controlPoint2: CGPoint(x: 37.96, y: 76.08))
            shaped.addCurve(to: CGPoint(x: 47.1, y: 80.8), controlPoint1: CGPoint(x: 42.73, y: 80.36), controlPoint2: CGPoint(x: 47.1, y: 80.8))
            shaped.addLine(to: CGPoint(x: 46.78, y: 79.16))
            shaped.addLine(to: CGPoint(x: 50.55, y: 79.19))
            shaped.addLine(to: CGPoint(x: 49.99, y: 78.11))
            shaped.addLine(to: CGPoint(x: 52.4, y: 78.16))
            shaped.addCurve(to: CGPoint(x: 49.09, y: 73.78), controlPoint1: CGPoint(x: 52.4, y: 78.16), controlPoint2: CGPoint(x: 51.57, y: 76))
            shaped.addCurve(to: CGPoint(x: 49.82, y: 69.86), controlPoint1: CGPoint(x: 49.09, y: 73.78), controlPoint2: CGPoint(x: 49.82, y: 71.95))
            shaped.addCurve(to: CGPoint(x: 60.75, y: 64.75), controlPoint1: CGPoint(x: 49.82, y: 69.86), controlPoint2: CGPoint(x: 55.31, y: 70.65))
            shaped.addCurve(to: CGPoint(x: 64.96, y: 50.43), controlPoint1: CGPoint(x: 61.44, y: 64), controlPoint2: CGPoint(x: 63.94, y: 60.54))
            shaped.addCurve(to: CGPoint(x: 69.81, y: 48.13), controlPoint1: CGPoint(x: 64.96, y: 50.43), controlPoint2: CGPoint(x: 68.66, y: 50.53))
            shaped.addCurve(to: CGPoint(x: 70.05, y: 43.78), controlPoint1: CGPoint(x: 69.81, y: 48.13), controlPoint2: CGPoint(x: 70.75, y: 46.48))
            shaped.addCurve(to: CGPoint(x: 71.49, y: 41.55), controlPoint1: CGPoint(x: 70.05, y: 43.78), controlPoint2: CGPoint(x: 71.49, y: 42.22))
            shaped.addCurve(to: CGPoint(x: 70.94, y: 38.46), controlPoint1: CGPoint(x: 71.49, y: 41.55), controlPoint2: CGPoint(x: 72.32, y: 39.76))
            shaped.addCurve(to: CGPoint(x: 69.24, y: 39.76), controlPoint1: CGPoint(x: 70.94, y: 38.46), controlPoint2: CGPoint(x: 70.58, y: 41.55))
            shaped.addCurve(to: CGPoint(x: 69.94, y: 36.55), controlPoint1: CGPoint(x: 68.5, y: 38.79), controlPoint2: CGPoint(x: 69.59, y: 37.59))
            shaped.addCurve(to: CGPoint(x: 69.59, y: 31.55), controlPoint1: CGPoint(x: 70.3, y: 35.51), controlPoint2: CGPoint(x: 70.56, y: 32.7))
            shaped.addCurve(to: CGPoint(x: 68.75, y: 33.54), controlPoint1: CGPoint(x: 69.59, y: 31.55), controlPoint2: CGPoint(x: 69.82, y: 33.31))
            shaped.addCurve(to: CGPoint(x: 66.8, y: 31.48), controlPoint1: CGPoint(x: 67.49, y: 33.82), controlPoint2: CGPoint(x: 66.8, y: 31.48))
            shaped.addCurve(to: CGPoint(x: 65.17, y: 25.51), controlPoint1: CGPoint(x: 66.8, y: 31.48), controlPoint2: CGPoint(x: 67.51, y: 28.81))
            shaped.addCurve(to: CGPoint(x: 65.17, y: 21.86), controlPoint1: CGPoint(x: 64.29, y: 24.32), controlPoint2: CGPoint(x: 65.17, y: 21.86))
            shaped.addCurve(to: CGPoint(x: 63.37, y: 24.49), controlPoint1: CGPoint(x: 65.17, y: 21.86), controlPoint2: CGPoint(x: 63.53, y: 22.65))
            shaped.addCurve(to: CGPoint(x: 63.37, y: 29.53), controlPoint1: CGPoint(x: 63.29, y: 25.44), controlPoint2: CGPoint(x: 63.97, y: 27.52))
            shaped.addCurve(to: CGPoint(x: 62.44, y: 30.76), controlPoint1: CGPoint(x: 63.2, y: 30.09), controlPoint2: CGPoint(x: 62.87, y: 30.55))
            shaped.addCurve(to: CGPoint(x: 62.26, y: 28.02), controlPoint1: CGPoint(x: 62.01, y: 30.97), controlPoint2: CGPoint(x: 62.26, y: 28.02))
            shaped.addCurve(to: CGPoint(x: 60.31, y: 31.69), controlPoint1: CGPoint(x: 62.26, y: 28.02), controlPoint2: CGPoint(x: 60.31, y: 28.39))
            shaped.addCurve(to: CGPoint(x: 58.87, y: 29.83), controlPoint1: CGPoint(x: 60.31, y: 31.8), controlPoint2: CGPoint(x: 59.33, y: 31.8))
            shaped.addCurve(to: CGPoint(x: 58.52, y: 34.01), controlPoint1: CGPoint(x: 58.87, y: 29.83), controlPoint2: CGPoint(x: 57.97, y: 32.04))
            shaped.addCurve(to: CGPoint(x: 58.81, y: 36.34), controlPoint1: CGPoint(x: 58.64, y: 34.45), controlPoint2: CGPoint(x: 59.01, y: 35.31))
            shaped.addCurve(to: CGPoint(x: 57.87, y: 38.14), controlPoint1: CGPoint(x: 58.7, y: 36.9), controlPoint2: CGPoint(x: 58.23, y: 37.54))
            shaped.addCurve(to: CGPoint(x: 56.28, y: 42.35), controlPoint1: CGPoint(x: 57.51, y: 38.74), controlPoint2: CGPoint(x: 56.14, y: 40.61))
            shaped.addCurve(to: CGPoint(x: 57.87, y: 46), controlPoint1: CGPoint(x: 56.42, y: 44.09), controlPoint2: CGPoint(x: 57.87, y: 45.99))
            shaped.addCurve(to: CGPoint(x: 58.87, y: 48.71), controlPoint1: CGPoint(x: 58.32, y: 46.88), controlPoint2: CGPoint(x: 58.24, y: 48.32))
            shaped.addCurve(to: CGPoint(x: 60.45, y: 48.94), controlPoint1: CGPoint(x: 59.51, y: 49.09), controlPoint2: CGPoint(x: 60.45, y: 48.94))
            shaped.addCurve(to: CGPoint(x: 61.97, y: 50.17), controlPoint1: CGPoint(x: 60.67, y: 49.18), controlPoint2: CGPoint(x: 60.97, y: 49.91))
            shaped.addCurve(to: CGPoint(x: 47.6, y: 60.54), controlPoint1: CGPoint(x: 58.29, y: 60.75), controlPoint2: CGPoint(x: 47.6, y: 60.54))
            shaped.addCurve(to: CGPoint(x: 44.84, y: 57.23), controlPoint1: CGPoint(x: 46.29, y: 58.25), controlPoint2: CGPoint(x: 44.84, y: 57.23))
            shaped.addCurve(to: CGPoint(x: 39.83, y: 46.88), controlPoint1: CGPoint(x: 44.55, y: 53.95), controlPoint2: CGPoint(x: 39.83, y: 46.88))
            shaped.addCurve(to: CGPoint(x: 44.55, y: 46.59), controlPoint1: CGPoint(x: 39.83, y: 46.88), controlPoint2: CGPoint(x: 41.14, y: 46.99))
            shaped.addCurve(to: CGPoint(x: 52.24, y: 43.01), controlPoint1: CGPoint(x: 49.84, y: 45.46), controlPoint2: CGPoint(x: 52.58, y: 43.61))
            shaped.addCurve(to: CGPoint(x: 50.72, y: 41.81), controlPoint1: CGPoint(x: 51.9, y: 42.42), controlPoint2: CGPoint(x: 50.72, y: 41.81))
            shaped.addCurve(to: CGPoint(x: 52.24, y: 40.28), controlPoint1: CGPoint(x: 50.72, y: 41.81), controlPoint2: CGPoint(x: 52.51, y: 40.97))
            shaped.addCurve(to: CGPoint(x: 49.42, y: 39.94), controlPoint1: CGPoint(x: 50.94, y: 39.59), controlPoint2: CGPoint(x: 49.03, y: 40.4))
            shaped.addCurve(to: CGPoint(x: 49.82, y: 37.91), controlPoint1: CGPoint(x: 49.82, y: 39.48), controlPoint2: CGPoint(x: 50.7, y: 37.91))
            shaped.addCurve(to: CGPoint(x: 45.64, y: 38.85), controlPoint1: CGPoint(x: 48.51, y: 37.91), controlPoint2: CGPoint(x: 48.31, y: 39.3))
            shaped.addCurve(to: CGPoint(x: 33.8, y: 34.44), controlPoint1: CGPoint(x: 42.98, y: 38.4), controlPoint2: CGPoint(x: 34.09, y: 34.74))
            shaped.addCurve(to: CGPoint(x: 33.45, y: 31.48), controlPoint1: CGPoint(x: 33.8, y: 34.44), controlPoint2: CGPoint(x: 32.77, y: 33.54))
            shaped.addCurve(to: CGPoint(x: 30.9, y: 4.71), controlPoint1: CGPoint(x: 35.12, y: 26.28), controlPoint2: CGPoint(x: 35.63, y: 10.37))
            shaped.addCurve(to: CGPoint(x: 20.15, y: 0.07), controlPoint1: CGPoint(x: 26.17, y: -0.96), controlPoint2: CGPoint(x: 20.15, y: 0.07))
            shaped.addCurve(to: CGPoint(x: 6.86, y: 9.89), controlPoint1: CGPoint(x: 20.15, y: 0.07), controlPoint2: CGPoint(x: 11.16, y: 0.77))
            shaped.addCurve(to: CGPoint(x: 5.41, y: 20.75), controlPoint1: CGPoint(x: 6.86, y: 9.89), controlPoint2: CGPoint(x: 5.41, y: 13.45))
            shaped.addCurve(to: CGPoint(x: 5.92, y: 28.96), controlPoint1: CGPoint(x: 5.41, y: 20.75), controlPoint2: CGPoint(x: 3.3, y: 25.67))
            shaped.addCurve(to: CGPoint(x: 14.88, y: 34.63), controlPoint1: CGPoint(x: 8.54, y: 32.25), controlPoint2: CGPoint(x: 11.28, y: 33.54))
            shaped.addCurve(to: CGPoint(x: 13.02, y: 35.38), controlPoint1: CGPoint(x: 14.88, y: 34.63), controlPoint2: CGPoint(x: 14.82, y: 34.65))
            shaped.close()
            shaped.move(to: CGPoint(x: 13.02, y: 35.38))
            context.saveGState()
            context.translateBy(x: 0.15, y: 0.15)
            shaped.usesEvenOddFillRule = true
            UIColor.white.setFill()
            shaped.fill()
            shaped.lineWidth = 0.5
            UIColor(hue: 0.487, saturation: 1, brightness: 0.689, alpha: 1).setStroke()
            shaped.stroke()
            context.restoreGState()
            
            context.restoreGState()
        }
        
        context.restoreGState()
    }
    
    
    //MARK: - Canvas Images
    
    class func imageOfLogo() -> UIImage {
        struct LocalCache {
            static var image: UIImage!
        }
        if LocalCache.image != nil {
            return LocalCache.image
        }
        var image: UIImage
        
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 120, height: 120), false, 0)
        StyleKit.drawLogo()
        image = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()
        
        LocalCache.image = image
        return image
    }
    
    
    //MARK: - Resizing Behavior
    
    enum ResizingBehavior {
        case aspectFit /// The content is proportionally resized to fit into the target rectangle.
        case aspectFill /// The content is proportionally resized to completely fill the target rectangle.
        case stretch /// The content is stretched to match the entire target rectangle.
        case center /// The content is centered in the target rectangle, but it is NOT resized.
        
        func apply(rect: CGRect, target: CGRect) -> CGRect {
            if rect == target || target == CGRect.zero {
                return rect
            }
            
            var scales = CGSize.zero
            scales.width = abs(target.width / rect.width)
            scales.height = abs(target.height / rect.height)
            
            switch self {
                case .aspectFit:
                    scales.width = min(scales.width, scales.height)
                    scales.height = scales.width
                case .aspectFill:
                    scales.width = max(scales.width, scales.height)
                    scales.height = scales.width
                case .stretch:
                    break
                case .center:
                    scales.width = 1
                    scales.height = 1
            }
            
            var result = rect.standardized
            result.size.width *= scales.width
            result.size.height *= scales.height
            result.origin.x = target.minX + (target.width - result.width) / 2
            result.origin.y = target.minY + (target.height - result.height) / 2
            return result
        }
    }
}
